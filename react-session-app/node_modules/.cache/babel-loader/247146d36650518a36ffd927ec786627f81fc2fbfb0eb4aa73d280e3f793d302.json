{"ast":null,"code":"const BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3000\";\nexport async function getNewSession() {\n  const res = await fetch(`${BASE}/generate`);\n  let str = `${BASE}/generate`;\n  console.debug('string: ', str);\n  if (!res.ok) throw new Error(`GET / failed: ${res.status}`);\n  console.debug('HERE...');\n  return res.json();\n}\nexport async function updateChatData(sessionId, chatData) {\n  const res = await fetch(`${BASE}/update?session=${encodeURIComponent(sessionId)}&chatData=${encodeURIComponent(chatData)}`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(`POST /update failed: ${res.status}`);\n  return res.json();\n}\nexport async function listSessions(limit = 20) {\n  const res = await fetch(`${BASE}/?limit=${encodeURIComponent(limit)}`);\n  if (!res.ok) throw new Error(`GET /sessions failed: ${res.status}`);\n  return res.json();\n}","map":{"version":3,"names":["BASE","process","env","REACT_APP_API_BASE","getNewSession","res","fetch","str","console","debug","ok","Error","status","json","updateChatData","sessionId","chatData","encodeURIComponent","method","listSessions","limit"],"sources":["/Users/chanthaithong/Downloads/react-session-app 2/react-session-app/src/api.js"],"sourcesContent":["const BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3000\";\n\nexport async function getNewSession() {\n  const res = await fetch(`${BASE}/generate`);\n  let str = `${BASE}/generate`\n  console.debug('string: ', str)\n  if (!res.ok) throw new Error(`GET / failed: ${res.status}`)\n  console.debug('HERE...')\n  return res.json()\n}\n\nexport async function updateChatData(sessionId, chatData) {\n  const res = await fetch(`${BASE}/update?session=${encodeURIComponent(sessionId)}&chatData=${encodeURIComponent(chatData)}`, { method: \"POST\" });\n  if (!res.ok) throw new Error(`POST /update failed: ${res.status}`);\n  return res.json();\n}\n\nexport async function listSessions(limit = 20) {\n  const res = await fetch(`${BASE}/?limit=${encodeURIComponent(limit)}`);\n  if (!res.ok) throw new Error(`GET /sessions failed: ${res.status}`);\n  return res.json();\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAEtE,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,IAAI,WAAW,CAAC;EAC3C,IAAIO,GAAG,GAAG,GAAGP,IAAI,WAAW;EAC5BQ,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEF,GAAG,CAAC;EAC9B,IAAI,CAACF,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiBN,GAAG,CAACO,MAAM,EAAE,CAAC;EAC3DJ,OAAO,CAACC,KAAK,CAAC,SAAS,CAAC;EACxB,OAAOJ,GAAG,CAACQ,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,cAAcA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACxD,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,IAAI,mBAAmBiB,kBAAkB,CAACF,SAAS,CAAC,aAAaE,kBAAkB,CAACD,QAAQ,CAAC,EAAE,EAAE;IAAEE,MAAM,EAAE;EAAO,CAAC,CAAC;EAC/I,IAAI,CAACb,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwBN,GAAG,CAACO,MAAM,EAAE,CAAC;EAClE,OAAOP,GAAG,CAACQ,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeM,YAAYA,CAACC,KAAK,GAAG,EAAE,EAAE;EAC7C,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,IAAI,WAAWiB,kBAAkB,CAACG,KAAK,CAAC,EAAE,CAAC;EACtE,IAAI,CAACf,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyBN,GAAG,CAACO,MAAM,EAAE,CAAC;EACnE,OAAOP,GAAG,CAACQ,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}